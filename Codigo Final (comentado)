# Este script realiza el análisis completo de las señales de 3 sensores:
# Temperatura, Humedad y Viento.
# Incluye: promediado móvil, filtro pasa bajas, filtro pasa bandas y análisis de frecuencia (FFT),
# todo presentado en una figura por etapa, con 3 subgráficas (una por sensor) para comparar visualmente los resultados.

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from scipy.signal import butter, filtfilt
from scipy.fft import fft, fftfreq

# Ruta base donde están los CSV descargados
ruta = r"C:\Users\Angel\Downloads"

# Cargar los datos de cada sensor
temperatura = pd.read_csv(ruta + r"\temperatura.csv")
humedad = pd.read_csv(ruta + r"\humedad.csv")
viento = pd.read_csv(ruta + r"\viento.csv")

# Configurar tiempo: cada dato fue tomado cada 5 segundos
intervalo = 5  # segundos entre muestras
fs = 1 / intervalo  # frecuencia de muestreo = 0.2 Hz

# Agregamos una columna de tiempo a cada dataframe
temperatura["Tiempo"] = temperatura.index * intervalo
humedad["Tiempo"] = humedad.index * intervalo
viento["Tiempo"] = viento.index * intervalo

# =======================
# Paso 1: Promediado Móvil
# =======================

# Aplicamos promedio móvil con ventana de 3 (suaviza la señal)
temperatura["Promedio"] = temperatura["Temperatura_C"].rolling(window=3, center=True).mean()
humedad["Promedio"] = humedad["Humedad_Relativa_%"].rolling(window=3, center=True).mean()
viento["Promedio"] = viento["Velocidad_Viento_mps"].rolling(window=3, center=True).mean()

# Gráfica comparativa de promediado
fig, axs = plt.subplots(3, 1, figsize=(12, 10), sharex=True)
axs[0].plot(temperatura["Tiempo"], temperatura["Temperatura_C"], label="Original", alpha=0.6)
axs[0].plot(temperatura["Tiempo"], temperatura["Promedio"], label="Promedio Móvil", linestyle='--', color='black')
axs[0].set_title("Temperatura")
axs[0].set_ylabel("°C")
axs[0].legend(); axs[0].grid(True)

axs[1].plot(humedad["Tiempo"], humedad["Humedad_Relativa_%"], label="Original", alpha=0.6)
axs[1].plot(humedad["Tiempo"], humedad["Promedio"], label="Promedio Móvil", linestyle='--', color='black')
axs[1].set_title("Humedad")
axs[1].set_ylabel("% HR")
axs[1].legend(); axs[1].grid(True)

axs[2].plot(viento["Tiempo"], viento["Velocidad_Viento_mps"], label="Original", alpha=0.6)
axs[2].plot(viento["Tiempo"], viento["Promedio"], label="Promedio Móvil", linestyle='--', color='black')
axs[2].set_title("Viento")
axs[2].set_ylabel("m/s")
axs[2].set_xlabel("Tiempo (s)")
axs[2].legend(); axs[2].grid(True)
plt.tight_layout()
plt.show()

# =======================
# Paso 2: Filtro Pasa Bajas
# =======================

# Definimos función de filtro pasa bajas (frecuencia normalizada de 0.06)
def filtro_pasa_bajas(senal, fc=0.06, orden=2):
    b, a = butter(orden, fc, btype='low')
    return filtfilt(b, a, senal)

# Aplicamos el filtro a cada sensor
temperatura["Pasa_Bajas"] = filtro_pasa_bajas(temperatura["Temperatura_C"])
humedad["Pasa_Bajas"] = filtro_pasa_bajas(humedad["Humedad_Relativa_%"])
viento["Pasa_Bajas"] = filtro_pasa_bajas(viento["Velocidad_Viento_mps"])

# Graficamos comparativas
fig, axs = plt.subplots(3, 1, figsize=(12, 10), sharex=True)
axs[0].plot(temperatura["Tiempo"], temperatura["Temperatura_C"], label="Original", alpha=0.6)
axs[0].plot(temperatura["Tiempo"], temperatura["Pasa_Bajas"], label="Pasa Bajas", linestyle='--', color='red')
axs[0].set_title("Temperatura"); axs[0].set_ylabel("°C"); axs[0].legend(); axs[0].grid(True)

axs[1].plot(humedad["Tiempo"], humedad["Humedad_Relativa_%"], label="Original", alpha=0.6)
axs[1].plot(humedad["Tiempo"], humedad["Pasa_Bajas"], label="Pasa Bajas", linestyle='--', color='red')
axs[1].set_title("Humedad"); axs[1].set_ylabel("% HR"); axs[1].legend(); axs[1].grid(True)

axs[2].plot(viento["Tiempo"], viento["Velocidad_Viento_mps"], label="Original", alpha=0.6)
axs[2].plot(viento["Tiempo"], viento["Pasa_Bajas"], label="Pasa Bajas", linestyle='--', color='red')
axs[2].set_title("Viento"); axs[2].set_ylabel("m/s"); axs[2].set_xlabel("Tiempo (s)"); axs[2].legend(); axs[2].grid(True)
plt.tight_layout()
plt.show()

# =======================
# Paso 3: Filtro Pasa Bandas
# =======================

# Definimos función de filtro pasa bandas (mantiene solo frecuencias intermedias)
def filtro_pasa_bandas(senal, f_low=0.01, f_high=0.09, orden=2):
    b, a = butter(orden, [f_low, f_high], btype='band')
    return filtfilt(b, a, senal)

# Aplicamos el filtro a cada señal
temperatura["Pasa_Bandas"] = filtro_pasa_bandas(temperatura["Temperatura_C"])
humedad["Pasa_Bandas"] = filtro_pasa_bandas(humedad["Humedad_Relativa_%"])
viento["Pasa_Bandas"] = filtro_pasa_bandas(viento["Velocidad_Viento_mps"])

# Graficamos comparativas
fig, axs = plt.subplots(3, 1, figsize=(12, 10), sharex=True)
axs[0].plot(temperatura["Tiempo"], temperatura["Temperatura_C"], label="Original", alpha=0.6)
axs[0].plot(temperatura["Tiempo"], temperatura["Pasa_Bandas"], label="Pasa Bandas", linestyle=':', color='green')
axs[0].set_title("Temperatura"); axs[0].set_ylabel("°C"); axs[0].legend(); axs[0].grid(True)

axs[1].plot(humedad["Tiempo"], humedad["Humedad_Relativa_%"], label="Original", alpha=0.6)
axs[1].plot(humedad["Tiempo"], humedad["Pasa_Bandas"], label="Pasa Bandas", linestyle=':', color='green')
axs[1].set_title("Humedad"); axs[1].set_ylabel("% HR"); axs[1].legend(); axs[1].grid(True)

axs[2].plot(viento["Tiempo"], viento["Velocidad_Viento_mps"], label="Original", alpha=0.6)
axs[2].plot(viento["Tiempo"], viento["Pasa_Bandas"], label="Pasa Bandas", linestyle=':', color='green')
axs[2].set_title("Viento"); axs[2].set_ylabel("m/s"); axs[2].set_xlabel("Tiempo (s)"); axs[2].legend(); axs[2].grid(True)
plt.tight_layout()
plt.show()

# =======================
# Paso 4: Análisis de Frecuencia (FFT)
# =======================

# Función para calcular el espectro de frecuencia
def calcular_fft(senal, fs):
    N = len(senal)
    fft_vals = fft(senal)
    magnitud = np.abs(fft_vals) / N
    frecs = fftfreq(N, d=1/fs)
    return frecs[:N//2], magnitud[:N//2]

# Función para graficar la comparativa de espectros
def graficar_fft_comparativa(df, columna, nombre, ax):
    original = df[columna]
    lp = df["Pasa_Bajas"]
    bp = df["Pasa_Bandas"]

    f1, m1 = calcular_fft(original, fs)
    f2, m2 = calcular_fft(lp, fs)
    f3, m3 = calcular_fft(bp, fs)

    ax.plot(f1, m1, label="Original", alpha=0.6)
    ax.plot(f2, m2, label="Pasa Bajas", linestyle='--', color='red')
    ax.plot(f3, m3, label="Pasa Bandas", linestyle=':', color='green')
    ax.set_title(nombre); ax.set_ylabel("Magnitud"); ax.legend(); ax.grid(True)

# Creamos la figura final con FFT de los tres sensores
fig, axs = plt.subplots(3, 1, figsize=(12, 10), sharex=True)
graficar_fft_comparativa(temperatura, "Temperatura_C", "Temperatura", axs[0])
graficar_fft_comparativa(humedad, "Humedad_Relativa_%", "Humedad", axs[1])
graficar_fft_comparativa(viento, "Velocidad_Viento_mps", "Viento", axs[2])
axs[2].set_xlabel("Frecuencia (Hz)")
plt.tight_layout()
plt.show()
